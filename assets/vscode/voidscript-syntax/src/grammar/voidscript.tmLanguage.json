{
  "fileTypes": [
    "voidscript",
    "vs"
  ],
  "scopeName": "source.voidscript",
  "patterns": [
    {
      "name": "comment.line.number-sign.voidscript",
      "match": "#.*"
    },
    {
      "name": "comment.line.double-slash.voidscript",
      "match": "//.*"
    },
    {
      "name": "keyword.control.voidscript",
      "match": "\\b(function|class|const|object|string|int|boolean|bool|double|float|if|else|for|while|switch|case|break|continue|new|return|throw|typeof|private|public|protected)\\b"
    },
    {
      "name": "entity.name.type.class.voidscript",
      "match": "\\b(class)\\b"
    },
    {
      "name": "entity.name.class.voidscript",
      "match": "\\bclass\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
      "captures": {
        "1": {
          "name": "entity.name.class.voidscript"
        }
      }
    },
    {
      "name": "support.class.voidscript",
      "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "variable.other.local.voidscript",
      "match": "(\\$[a-zA-Z_][a-zA-Z0-9_]*|this->[a-zA-Z_][a-zA-Z0-9_]*)"
    },
    {
      "name": "variable.language.this.voidscript",
      "match": "\\bthis\\b"
    },
    {
      "name": "string.quoted.double.voidscript",
      "match": "\"([^\"]|\\\\\")*\""
    },
    {
      "name": "constant.numeric.voidscript",
      "match": "\\b\\d+(?:\\.\\d+)?\\b"
    },
    {
      "name": "constant.language.boolean.voidscript",
      "match": "\\b(true|false)\\b"
    },
    {
      "name": "keyword.operator.voidscript",
      "match": "(->|\\+=|-=|\\*=|\\/|%=|&&|\\|\\||==|!=|>=|<=|>|<|\\+|-|\\*|\\/|%|=|!)"
    },
    {
      "name": "variable.other.local.voidscript",
      "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
    },
    {
      "name": "entity.name.function.voidscript",
      "match": "\\b(function|construct)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\b"
    }
  ],
  "repository": {}
}
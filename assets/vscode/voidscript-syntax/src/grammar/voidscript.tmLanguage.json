{
  "fileTypes": [
    "voidscript",
    "vs"
  ],
  "scopeName": "source.voidscript",
  "patterns": [
    {
      "name": "comment.line.number-sign.voidscript",
      "match": "#.*"
    },
    {
      "name": "comment.line.double-slash.voidscript",
      "match": "//.*"
    },
    {
      "name": "keyword.control.voidscript",
      "match": "\\b(if|else|for|while|switch|case|break|continue|return|throw|typeof)\\b"
    },
    {
      "name": "keyword.other.voidscript",
      "match": "\\b(function|class|new|private|public|protected)\\b"
    },
    {
      "name": "storage.type.voidscript",
      "match": "\\b(const|string|int|boolean|bool|double|float|object)\\b"
    },
    {
      "name": "constant.language.voidscript",
      "match": "\\b(null|true|false)\\b"
    },
    {
      "name": "entity.name.type.class.voidscript",
      "match": "\\b(class)\\b"
    },
    {
      "name": "entity.name.class.voidscript",
      "match": "\\bclass\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
      "captures": {
        "1": {
          "name": "entity.name.class.voidscript"
        }
      }
    },
    {
      "name": "support.class.voidscript",
      "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "variable.other.local.voidscript",
      "match": "(\\$[a-zA-Z_][a-zA-Z0-9_]*|this->[a-zA-Z_][a-zA-Z0-9_]*)"
    },
    {
      "name": "variable.language.this.voidscript",
      "match": "\\bthis\\b"
    },
    {
      "name": "string.quoted.double.voidscript",
      "match": "\"([^\"]|\\\\\")*\""
    },
    {
      "name": "constant.numeric.voidscript",
      "match": "\\b\\d+(?:\\.\\d+)?\\b"
    },
    {
      "name": "keyword.operator.voidscript",
      "match": "(->|\\+=|-=|\\*=|\\/|%=|&&|\\|\\||==|!=|>=|<=|>|<|\\+|-|\\*|\\/|%|=|!)"
    },
    {
      "name": "entity.name.function.voidscript",
      "match": "\\b(function|construct)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
      "captures": {
        "2": {
          "name": "entity.name.function.voidscript"
        }
      }
    },
    {
      "name": "support.function.voidscript",
      "match": "\\b(printnl|println)\\b"
    },
    {
      "name": "meta.function.parameters.voidscript",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\s+\\$[a-zA-Z_][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "meta.function.return-type.voidscript",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\s+\\{\\s*\\b"
    },
    {
      "name": "variable.other.voidscript",
      "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
    },
    {
      "name": "entity.name.function.call.voidscript",
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
    },
    {
      "name": "punctuation.section.block.begin.voidscript",
      "match": "\\{"
    },
    {
      "name": "punctuation.section.block.end.voidscript",
      "match": "\\}"
    },
    {
      "name": "punctuation.separator.key-value.voidscript",
      "match": ":"
    },
    {
      "name": "punctuation.terminator.statement.voidscript",
      "match": ";"
    },
    {
      "name": "meta.object-literal.key.voidscript",
      "match": "(?<=\\{|,)\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*:"
    }
  ],
  "repository": {}
}
name: Build and Release

on:
  push:
    branches: ['*']
    tags: ['v*']
  pull_request:
    branches: ['*']

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential pkg-config git libc6-dev \
            libfmt-dev libxml2-dev libmariadb-dev libmagick++-dev
    
    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_CLI=ON \
          -DBUILD_COMPILER=ON \
          -DBUILD_FASTCGI=ON \
          -DBUILD_TESTS=OFF
    
    - name: Build project
      run: cmake --build build --parallel
    
    - name: Create DEB packages (for tags)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd build
        cpack -G DEB
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: soniscript-${{ matrix.os }}-${{ github.sha }}
        path: |
          build/*.deb
          build/cli/soniscript*
          build/compiler/soniscript-compiler*
          build/fastcgi/soniscript-fcgi*
        retention-days: 30
        if-no-files-found: warn

  release:
    name: Create Release
    runs-on: ubuntu-22.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential pkg-config git libc6-dev \
            libfmt-dev libxml2-dev libmariadb-dev libmagick++-dev
    
    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_CLI=ON \
          -DBUILD_COMPILER=ON \
          -DBUILD_FASTCGI=ON \
          -DBUILD_TESTS=OFF
    
    - name: Build project
      run: cmake --build build --parallel
    
    - name: Create DEB packages
      run: |
        cd build
        cpack -G DEB
    
    - name: Get tag name
      id: get_tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: List generated packages
      run: |
        echo "Generated DEB packages:"
        ls -la build/*.deb || echo "No .deb files found"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ steps.get_tag.outputs.tag }}
        tag_name: ${{ steps.get_tag.outputs.tag }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          build/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: soniscript-release-${{ steps.get_tag.outputs.tag }}
        path: build/*.deb
        retention-days: 90